// Generated by CoffeeScript 1.6.3
var connect, they;

connect = require('./connect');

/*
Extends mocha with a function similar to `it` but 
running both locally and remotely
*/


they = function(msg, callback) {
  it("" + msg + " (local)", function(next) {
    return callback.call(this, null, next);
  });
  return it("" + msg + " (remote)", function(next) {
    var _this = this;
    return connect({
      host: 'localhost'
    }, function(err, ssh) {
      return callback.call(_this, ssh, next);
    });
  });
};

they.only = function(mode, msg, callback) {
  switch (mode) {
    case 'local':
      return it.only("" + msg + " (local)", function(next) {
        return callback.call(this, null, next);
      });
    case 'remote':
      return it.only("" + msg + " (remote)", function(next) {
        var _this = this;
        return connect({
          host: 'localhost'
        }, function(err, ssh) {
          return callback.call(_this, ssh, next);
        });
      });
    default:
      throw new Error("Invalid test mode " + mode);
  }
};

they.skip = function(mode, msg, callback) {
  switch (mode) {
    case 'local':
      return it.skip("" + msg + " (local)", function(next) {
        return callback.call(this, null, next);
      });
    case 'remote':
      return it.skip("" + msg + " (remote)", function(next) {
        var _this = this;
        return connect({
          host: 'localhost'
        }, function(err, ssh) {
          return callback.call(_this, ssh, next);
        });
      });
    default:
      throw new Error("Invalid test mode " + mode);
  }
};

module.exports = they;
